@page "/breakout"
@using Blazor.Extensions;
@using Blazor.Extensions.Canvas
@using Blazor.Extensions.Canvas.Canvas2D;
@using BreakOutGame.BreakoutGame;
@inject IJSRuntime JSRuntime;

<BECanvas Width="_gameWidth" Height="_gameHeight" @ref="_canvasReference"></BECanvas>

@code {
    private Canvas2DContext _context;

    private const int _gameHeight = 600;
    private const int _gameWidth = 800;
    private BreakoutGameEngine _gameEngine;

    protected BECanvasComponent _canvasReference;

    

    private Task engine;

    protected override Task OnInitializedAsync()
    {

        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this._context = await this._canvasReference.CreateCanvas2DAsync();
            this._gameEngine = new BreakoutGameEngine(_context, _gameWidth, _gameHeight);
            await _gameEngine.Start(JSRuntime);
        }
    }
}